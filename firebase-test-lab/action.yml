name: 'Firebase Test Lab Testing'
description: 'Create a test on Firebase Test Lab'
inputs:
  testapp_dir:
    description: 'Testapps under this dir that will be uploaded.'
    required: true
  test_type:
    description: 'One of the following test types: xctest, robo, instrumentation, game-loop.'
    required: true
  device:
    description: 'Device model used for testing'
    required: false
  timeout:
    description: 'Timeout for one ftl test.'
    default: '600s'
    required: false
  retry:
    description: 'Retry time on failed testapps.'
    default: 0
    required: false
  project_id:
    description: 'Firebase Project ID'
    required: false

outputs:
  test_summary:
    description: "FTL Test summary in JSON formats"
    value: ${{ steps.ftl_test.outputs.test_summary }}

runs:
  using: 'composite'
  steps:
    # `required` does not work as expected so a validation is needed.
    # `required` issue:https://github.com/actions/runner/issues/1070
  - name: Validate inputs
    shell: bash
    run: |
      [[ "${{ inputs.testapp_dir }}" ]] || { echo "testapp_dir is empty" ; exit 1; }
      [[ "${{ inputs.test_type }}" ]] || { echo "test_type is empty" ; exit 1; }
  - id: 'auth'
    name: 'Authenticate to Google Cloud'
    uses: 'google-github-actions/auth@v0'
    with:
      credentials_json: '${{ env.GOOGLE_CREDENTIALS }}'
  - name: 'Set up Cloud SDK'
    uses: google-github-actions/setup-gcloud@v0
    with:
      install_components: 'beta'
  - id: ftl_test
    shell: bash
    run: |
      test_result=$(python $GITHUB_ACTION_PATH/trigger_ftl_tests.py --testapp_dir "${{ inputs.testapp_dir }}" --test_type "${{ inputs.test_type }}" --timeout "${{ inputs.timeout }}" --retry "${{ inputs.retry }}")
      echo ${test_result}
      if [[ ! -z ${test_result} ]]; then
        test_summary=$(echo ${test_result:2})
        echo $test_summary
        echo ${{fromJSON(echo ${test_result:2})}}
        echo ${{toJSON(echo ${test_result:2})}}
        echo "::set-output name=test_summary::$test_summary"
        exit $(echo ${test_result:0:1})
      else
        exit 1
      fi
